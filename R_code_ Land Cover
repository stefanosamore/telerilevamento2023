#Code for generating LAND COVER maps from satellite imagery

# Caricamento delle librerie necessarie
library(raster)
library(ggplot2) 
library(patchwork) # per multiframes fatti con ggplot2

# Imposta la directory di lavoro
setwd(setwd("/Users/stefanosamore/Desktop/lab/")

# Caricamento delle immagini satellitari (in formato raster)
defor1 <- brick("defor1_.png")
defor1 <- brick("defor1_.png")
defor2 <- brick("defor2_.png")

# Le bande NIR, RED e GREEN sono rispettivamente nei canali 1, 2 e 3
# Visualizza le immagini con composizione RGB
par(mfrow = c(2,1)) # Dispone i grafici in due righe, una colonna
plotRGB(defor1, 1, 2, 3, stretch = "lin")
plotRGB(defor2, 1, 2, 3, stretch = "lin")
dev.off()

# 1. Estrai tutti i valori singoli dai pixel dell'immagine defor1
singlenr1 <- getValues(defor1)
singlenr1

# 2. Classificazione dei pixel usando k-means clustering con 2 centri
kcluster1 <- kmeans(singlenr1, centers = 2)
kcluster1

# 3. Ricreazione di un'immagine con i risultati della classificazione
defor1_class <- setValues(defor1[[1]], kcluster1$cluster) # Assegna i cluster ai pixel

#par(mfrow = c(1,1))
# Visualizzazione dell'immagine classificata
plot(defor1_class)

# Definizione delle classi:
# class1 (bianco): foresta
# class2 (verde): suolo nudo

# Classificazione dell'immagine del 2006
# Estrai tutti i valori singoli dai pixel dell'immagine defor2
singlenr2 <- getValues(defor2)
singlenr2

# Classificazione dei pixel con k-means clustering (2 centri)
kcluster2 <- kmeans(singlenr2, centers = 2)
kcluster2

# Ricrea l'immagine classificata per defor2
defor2_class <- setValues(defor2[[1]], kcluster2$cluster) # assign new values to a raster object

# Plottiamo l'immagine classificata
plot(defor2_class)

# Definizione di una palette di colori personalizzata
cl <- colorRampPalette(c('yellow','black','red'))(100)
plot(defor1class, col=cl) # Applicaxione della palette personalizzata
# class1 (bianco): foresta
# class2 (verde): suolo nudo

# Multiframe per confrontare le due immagini classificate
par(mfrow = c(2,1))
plot(defor1_class)
plot(defor2_class)

# Calcolo delle percentuali per classi
# Frequenze delle classi per defor1 (1992)
frequencies1 <- freq(defor1_class)  # freq: restituisce il numero di pixel per ciascuna classe
frequencies1
# class 1: 306297 pixel (foresta)
# class 2: 34995 pixel (suolo nudo)

tot1 <- ncell(defor1_class) # Numero totale di pixel
tot1

# Percentuali per ciascuna classe
percentages1 <- frequencies1 * 100 / tot1
percentages1
# foresta: 89.75%
# suolo nudo: 10.25%

# Frequenze delle classi per defor2 (2006)
frequencies2 <- freq(defor2_class)
frequencies2
# class 1: 178456 pixel (foresta)
# class 2: 164270 pixel (suolo nudo)

# Numero totale di pixel per defor2
tot2 <- ncell(defor2_class)
tot2
# Percentuali per ciascuna classe
percentages2 <- frequencies2 * 100 / tot2
percentages2
# foresta: 52.07%
# suolo nudo: 47.93%

# Creazione di un dataframe con le percentuali
cover <- c("Forest","Bare soil")
percent_1992 <- c(89.75, 10.25)
percent_2006 <- c(52.07, 47.93)
percentages <- data.frame(cover, percent_1992, percent_2006)
percentages

# Primo grafico utilizzando ggplot2 per l'anno 1992
ggplot(percentages,
       aes(x = cover, y = percent_1992, color = cover)) +
  geom_bar(stat = "identity",
           fill = "white")
# we wanna know the identity for this kind of statistics, not the count
# Secondo grafico per l'anno 2006
ggplot(percentages,
       aes(x = cover, y = percent_2006, color = cover)) +
  geom_bar(stat = "identity",
           fill = "white")

# Uso di patchwork per combinare i due grafici
p1 <- ggplot(percentages,
             aes(x = cover, y = percent_1992, color = cover)) +
  geom_bar(stat = "identity",
           fill = "white") +
  ggtitle("Year 1992")

p2 <- ggplot(percentages,
             aes(x = cover, y = percent_2006, color = cover)) +
  geom_bar(stat = "identity",
           fill = "white") + 
  ggtitle("Year 2006")

p1 + p2  # Unione dei due grafici

# Use of patchwork to compare the plots
# Standardizzazione degli assi y con ylim()
p1 <- ggplot(percentages,
             aes(x = cover, y = percent_1992, color = cover)) +
  geom_bar(stat = "identity",
           fill = "white") +
  ggtitle("Year 1992") +
  ylim(c(0,100))

p2 <- ggplot(percentages,
             aes(x = cover, y = percent_2006, color = cover)) +
  geom_bar(stat = "identity",
           fill = "white") +
  ggtitle("Year 2006") +
  ylim(c(0,100)) # to choose the limits of y axe

p1 + p2 # Grafici finali con assi standardizzati
