# MULTIVARIATE ANALYSIS: ridurre un set di dati multidimensionale

# Pacchetti richiesti
library(raster)
library(ggplot2)
library(viridis)

# Set the wd in Mac
setwd("/User/stefano/desktop/lab")


# Caricamento dei dati
sen <- brick("sentinel.png")
sen
# NIR = banda 1
# red = banda 2
# green = banda 3
ncell(sen)  # numero di celle
plot(sen)  # plot
plotRGB(sen,1,2,3)

# visualizzazione dell'immagine in modo che la vegetazione diventi verde 
plotRGB(sen,2,1,3)

# Raggruppiamo le bande, rimuoviamo l'ultima
sen2 <- stack(sen[[1]], sen[[2]], sen[[3]])
plot(sen2)

# PCA (Principal Component Analysis)
sample <- sampleRandom(sen2, 10000)
pca <- prcomp(sample)

# varianza 
summary(pca)

# The first component is the one with the highest variability

# correlazione con le bande originali
pca

# Pc map: visualizzazione dall'analisi della PCA
pci <- predict(sen2, pca, index = c(1:3)) # or c(1:2)
plot(pci)
plot(pci[[1]])

# Plottiamo con ggplot
pcid <- as.data.frame(pci[[1]], xy = T)  # coerce into a dataframe
pcid
ggplot() +
  geom_raster(pcid,
              mapping = aes(x = x, y = y, fill = PC1)) +
  scale_fill_viridis() 

# magma
ggplot() +
  geom_raster(pcid,
              mapping = aes(x = x, y = y, fill = PC1)) +
  scale_fill_viridis(option = "magma")

# inferno 
ggplot() +
  geom_raster(pcid,
              mapping = aes(x = x,y = y, fill = PC1)) +
  scale_fill_viridis(option = "inferno")


# Deviazione standard (focal)
sd3 <- focal(pci[[1]], matrix(1/9, 3, 3), fun = sd)

# convertiamo in un dataframe
sd3d <- as.data.frame(sd3, xy = T)

# Plot
ggplot() +
  geom_raster(sd3d,
              mapping = aes(x = x, y = y, fill = layer)) +
  scale_fill_viridis()


# aggreghiamo le celle, per velocizzare le analisi
senres <- aggregate(sen, fact = 10)

# visualizziamo le immagini insieme 
library(patchwork)
im1 <- plotRGB(sen,2,1,3)
im2 <- ggplot() +
  geom_raster(pcid,
              mapping = aes(x = x, y = y, fill = PC1))
im3 <- ggplot() +
  geom_raster(sd3d,
              mapping = aes(x = x, y = y, fill = layer)) +
  scale_fill_viridis(option = "inferno")
im1 + im2 + im3
